/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package myDesign;

import actionUtils.Action;
import java.awt.Color;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import multiSockets.MulticastTx;

/**
 *
 * @author jp
 */
public class Sink extends javax.swing.JFrame {
    
     String title="      Vampire Attacks: Draining Life from Wireless Ad Hoc Sensor Networks";

    String sget;
    String sget1;
    String sget2;
    int i = 0;
    Action action;
    public String source;
    public static Vector<Vector<String>> data = new Vector<Vector<String>>();
    public static DefaultTableModel model;
    // DefaultTableModel model;
    static JTable table;
    public static JScrollPane jScrollPane;

    /**
     * Creates new form Sink
     */
    public Sink() {
      
        
        initComponents();
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
       this.getContentPane().setBackground(Color.CYAN); 
        action = new Action();
        init();
       // Design();
        Thread t = new Thread(new connect());
        t.start();


    }

    private void init() {

        source = "Sink";// + " " + Node_name;
       setTitle(source+title);
        new MulticastTx(source);
    }

    public void Design() {
        try {
            Vector<String> headers = new Vector<String>();
            headers.add("Node Name");
            headers.add("File Name");
            headers.add("Time Stamp");
            headers.add("Status");
            // getData();
            DefaultTableModel model = new DefaultTableModel(data, headers);
            table = new JTable(model);
            table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            //table.setBounds(350, 80, 500, 300);
            header_size();
            JScrollPane scroll = new JScrollPane(table);
            scroll.setBounds(350, 80, 500, 300);
            add(scroll);
            //add(table);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    class connect implements Runnable {

        public void run() {
            try {
                ServerSocket ss = new ServerSocket(8101);
                Socket s = ss.accept();
                System.out.println("Receive");
                InputStream is = s.getInputStream();
                ObjectInputStream ois = new ObjectInputStream(is);
                ArrayList<String> array = (ArrayList<String>) ois.readObject();
                System.out.println(array);
                sget = array.get(0);
                jLabel4.setText(sget);
                sget1 = array.get(1);
                sget2 = array.get(2);
               
                jTextArea1.setText(sget1);
                jButton1.setEnabled(true);
              
                
                if (jTextArea1.getText().equals(null) || jTextArea1.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Message Receiving Error...!");
                } else {
                    JOptionPane.showMessageDialog(null, "Message Received...!");
                    //i = 1;

                   /* Vector<String> d = new Vector<String>();
                    d.add("Source");
                    d.add("dotnet");
                    d.add("Android");
                    d.add("java");
                    d.add("\n\n\n\n\n\n\n");
                    data.add(d);
*/
                }
                //chk();

                is.close();
                ois.close();
                s.close();
                ss.close();
            } catch (Exception e) {
                System.out.println("OOPS! Errors are found -> " + e);
            }
        }
    }

    public static void header_size() {
        TableColumn column = table.getColumnModel().getColumn(0);
        column.setPreferredWidth(100);

        column = table.getColumnModel().getColumn(1);
        column.setPreferredWidth(350);

    }

    private static void getData() throws ClassNotFoundException {
        Vector<String> d = new Vector<String>();
        d.add("java");
        d.add("dotnet");
        d.add("Android");
        d.add("\n\n\n\n\n\n\n");
        data.add(d);
    }

    public void chk() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sink");
        setBackground(new java.awt.Color(153, 255, 255));
        setMinimumSize(new java.awt.Dimension(900, 450));
        getContentPane().setLayout(null);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 310, 230);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText(". ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 300, 140, 20);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Details :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(350, 20, 60, 20);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Received Message :");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 30, 140, 20);

        jButton1.setText("Check Status");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(200, 20, 100, 23);

        jButton2.setText("Save");
        getContentPane().add(jButton2);
        jButton2.setBounds(220, 300, 73, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        Design();
        Vector<String> d = new Vector<String>();
                    d.add("Source");
                    d.add(sget);
                    d.add("55 secs");
                    d.add("Delivered");
                    d.add("\n\n\n\n\n\n\n");
                    data.add(d);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sink.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sink.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sink.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sink.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Sink().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
